{"remainingRequest":"/Users/joey/Projects/qwinto/client/node_modules/thread-loader/dist/cjs.js!/Users/joey/Projects/qwinto/client/node_modules/babel-loader/lib/index.js!/Users/joey/Projects/qwinto/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/joey/Projects/qwinto/client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/joey/Projects/qwinto/client/src/components/AvailableActions.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/joey/Projects/qwinto/client/src/components/AvailableActions.vue","mtime":1668154010655},{"path":"/Users/joey/Projects/qwinto/client/node_modules/cache-loader/dist/cjs.js","mtime":1668178923236},{"path":"/Users/joey/Projects/qwinto/client/node_modules/thread-loader/dist/cjs.js","mtime":1668178923172},{"path":"/Users/joey/Projects/qwinto/client/node_modules/babel-loader/lib/index.js","mtime":1668178923523},{"path":"/Users/joey/Projects/qwinto/client/node_modules/cache-loader/dist/cjs.js","mtime":1668178923236},{"path":"/Users/joey/Projects/qwinto/client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1668178926998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2pvZXkvUHJvamVjdHMvcXdpbnRvL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiBbJ2NoZWNrZWRDb2xvcnMnXSwKICBtZXRob2RzOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBBY3Rpb25zKFsnbmV4dFBsYXllciddKSksCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ2dhbWVEYXRhJywgJ3JvdW5kRGF0YScsICdteUlkJywgJ2dhbWVUeXBlJ10pKSwge30sIHsKICAgIHNjb3JlQWRkZWQ6IGZ1bmN0aW9uIHNjb3JlQWRkZWQoKSB7CiAgICAgIHJldHVybiB0aGlzLnJvdW5kRGF0YS5zY29yZUFkZGVkW3RoaXMucm91bmREYXRhLmFjdGl2ZVBsYXllcl07CiAgICB9CiAgfSkKfTs="},{"version":3,"sources":["/Users/joey/Projects/qwinto/client/src/components/AvailableActions.vue"],"names":[],"mappings":";AAoBA,SAAS,UAAT,EAAqB,UAArB,QAAuC,MAAvC;AAEA,eAAe;AACb,EAAA,KAAK,EAAE,CAAC,eAAD,CADM;AAEb,EAAA,OAAO,oBACF,UAAU,CAAC,CAAC,YAAD,CAAD,CADR,CAFM;AAKb,EAAA,QAAQ,kCACH,UAAU,CAAC,CAAC,UAAD,EAAa,WAAb,EAA0B,MAA1B,EAAkC,UAAlC,CAAD,CADP;AAEN,IAAA,UAFM,wBAEO;AACX,aAAO,KAAK,SAAL,CAAe,UAAf,CAA0B,KAAK,SAAL,CAAe,YAAzC,CAAP;AACF;AAJM;AALK,CAAf","sourcesContent":["<template>\n  <div class=\"flex-1 flex-start mt-auto\" role=\"alert\">\n    <p class=\"font-bold text-sm\">{{ $t('game.available-actions') }}:</p>\n    <ul v-if=\"(myId === roundData.activePlayer || myId === null) && ((gameType === 'solo' && roundData.activePlayer === 0) || gameType !== 'solo')\" class=\"list-disc text-xs ml-4\">\n      <li v-if=\"roundData.remainingRolls === 2\">{{ $t('game.choose-dices') }}.</li>\n      <li v-if=\"roundData.remainingRolls > 0 && !scoreAdded && checkedColors.length > 0\">{{ $t('game.throw-dices') }} ({{ roundData.remainingRolls }}x).</li>\n      <li v-show=\"roundData.remainingRolls < 2 && !scoreAdded\">{{ $t('game.enter-score') }} ({{ roundData.dices.total }}).</li>\n      <li v-if=\"roundData.remainingRolls < 2 && roundData.scoreAdded.length === 0\">{{ $t('game.choose-failed') }}.</li>\n      <li v-if=\"roundData.scoreAdded[roundData.activePlayer]\">...</li>\n    </ul>\n    <ul v-if=\"(myId !== roundData.activePlayer && gameType !== 'local') && ((gameType === 'solo' && roundData.activePlayer !== 0) || gameType !== 'solo')\" class=\"list-disc text-xs ml-4\">\n      <li>{{ $t('game.wait-turn') }}</li>\n    </ul>\n    <p v-if=\"roundData.scoreAdded.length > 0 && !roundData.scoreAdded[roundData.activePlayer] && (myId === roundData.activePlayer || myId === null) && (gameType !== 'solo' || (gameType === 'solo' && roundData.activePlayer === 0))\">\n      <a @click=\"nextPlayer({ instant: true })\" class=\"text-xs text-blue-500 underline hover:text-blue-700 skip\" href=\"#\">{{ $t('game.skip') }} â†’</a>\n    </p>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  props: ['checkedColors'],\n  methods: {\n    ...mapActions(['nextPlayer']),\n  },\n  computed: {\n    ...mapGetters(['gameData', 'roundData', 'myId', 'gameType']),\n    scoreAdded() {\n      return this.roundData.scoreAdded[this.roundData.activePlayer]\n    }\n  }\n};\n</script>"],"sourceRoot":""}]}