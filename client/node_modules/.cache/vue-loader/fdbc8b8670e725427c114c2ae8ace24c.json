{"remainingRequest":"/Users/joey/Projects/qwinto/client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/joey/Projects/qwinto/client/src/components/FailedRow.vue?vue&type=style&index=0&id=b5fdc1b2&scoped=true&lang=css","dependencies":[{"path":"/Users/joey/Projects/qwinto/client/src/components/FailedRow.vue","mtime":1668154010656},{"path":"/Users/joey/Projects/qwinto/client/node_modules/css-loader/dist/cjs.js","mtime":1668178923679},{"path":"/Users/joey/Projects/qwinto/client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1668178927050},{"path":"/Users/joey/Projects/qwinto/client/node_modules/postcss-loader/src/index.js","mtime":1668178923928},{"path":"/Users/joey/Projects/qwinto/client/node_modules/cache-loader/dist/cjs.js","mtime":1668178923236},{"path":"/Users/joey/Projects/qwinto/client/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":1668178926998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CkBpbXBvcnQgdXJsKCdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PUhhbmRsZWUmZGlzcGxheT1zd2FwJyk7CgpwLmZhaWwgewogIGZvbnQtZmFtaWx5OiAnSGFuZGxlZScsIGN1cnNpdmU7Cn0K"},{"version":3,"sources":["/Users/joey/Projects/qwinto/client/src/components/FailedRow.vue"],"names":[],"mappings":";AAyjC","file":"/Users/joey/Projects/qwinto/client/src/components/FailedRow.vue","sourceRoot":"","sourcesContent":["<template>\n  <div @click=\"clickFail\" class=\"mt-3 mb-3 w-40 justify-center text-center\">\n    <p class=\"mt-1 text-xs\">{{ $t('game.failed-throw') }}: -5</p>\n    <div class=\"bg-gray-400 flex flex-wrap justify-center rounded-md\">\n      <div \n        v-for=\"i in [0, 1, 2, 3]\"\n        :key=\"i\">\n        <p class=\"w-8 h-8 pt-1 mx-1 my-1 text-center bg-white rounded-md fail\">{{ isFail(i) }}</p>\n      </div>\n    </div>\n  </div>\n  <base-dialog :show=\"confirm\" type=\"confirm\" :title=\"$t('game.confirm-title')\" @close=\"confirmFail(false)\">\n    <template #default>\n      <p>{{ $t('game.confirm-fail') }}</p>\n    </template>\n    <template #actions>\n      <base-button class=\"mr-2\" mode=\"hover:opacity-75\" @click=\"confirmFail(true)\">OK</base-button>\n      <base-button mode=\"hover:opacity-75\" @click=\"confirmFail(false)\">{{ $t('general.no') }}</base-button>\n    </template>\n  </base-dialog>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex';\n\nexport default {\n  props: ['player'],\n  data() {\n    return {\n      confirm: false\n    };\n  },\n  computed: {\n    ...mapGetters(['gameData', 'roundData', 'socket', 'myId', 'gameType'])\n  },\n  methods: {\n    ...mapActions(['setScore', 'nextPlayer', 'setGameOver']),\n    isFail(field) {\n      if (this.gameData[this.player]['fail'][field] === -5) return 'X';\n    },\n    clickFail() {\n       // Player fails round\n      if ((this.myId !== this.roundData.activePlayer && this.myId !== null) || (this.gameType === 'solo' && this.roundData.activePlayer !== 0)) {\n        return;\n      }\n      if (this.roundData.remainingRolls < 2 && this.roundData.scoreAdded.length === 0) {\n        this.confirm = true;\n      }\n    },\n    confirmFail(answer) {\n      this.confirm = false;\n      if (answer) {\n        this.setScore({ \n          color: 'fail', \n          field: this.gameData[this.roundData.activePlayer].fail.length \n        });\n        this.checkNumFails();\n        this.nextPlayer({ next: null });\n      } \n    },\n    checkNumFails() {\n      if (this.gameData[this.roundData.activePlayer].fail.length === 4) {\n        this.setGameOver();    \n        if (this.gameType === 'online') {\n          this.socket.emit('gameOver');\n        }\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Handlee&display=swap');\n\np.fail {\n  font-family: 'Handlee', cursive;\n}\n</style>"]}]}